import cv2
import numpy as np
import matplotlib.pyplot as plt

# histogram equalization
def hist_equal(img, z_max=255):
    H, W = img.shape
    # S is the total of pixels
    S = H * W  * 1.
    out = img.copy()
    sum_h = 0.
    for i in range(1, 255):
        ind = np.where(img == i)
        sum_h += len(img[ind])
        z_prime = z_max / S * sum_h
        out[ind] = z_prime
    out = out.astype(np.uint8)
    return out

# Read image
img = cv2.imread("Resources/Dilireba.jpg",0)

'''
calcHist-计算图像直方图
函数原型：calcHist(images,channels,mask,histSize,ranges,hist=None,accumulate=None)
images：图像矩阵，例如：[image]
channels：通道数，例如：0
mask：掩膜，一般为：None
histSize：直方图大小，一般等于灰度级数
ranges：横轴范围
'''

hist = cv2.calcHist([img],[0],None,[256],[0,256])
# plt.title("Grayscale Histogram")
# plt.xlabel("Bins")#X轴标签
# plt.ylabel("# of Pixels")#Y轴标签
plt.plot(hist)
# plt.xlim([0,256])#设置x坐标轴范围
plt.show()

# histogram normalization
out = hist_equal(img)

# Display histogram
plt.hist(out.ravel(), bins=255, rwidth=0.8, range=(0, 255))
plt.show()

cv2.imshow("result", np.hstack([img, out]))
cv2.waitKey(0)
cv2.destroyAllWindows()
